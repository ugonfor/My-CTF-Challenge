f0 = open("./prob2",'rb')
data = f0.read()
f0.close()

replace1 = b'H\x8d=\xad\x01\x00\x00\xe8 \xfa\xff\xff\xe8\xab\xfa\xff\xff\x89E\xe0\x83}\xe0\x00t\x0c\xb8\x00\x00\x00\x00\xe8=\xfc\xff\xff\xebhH\x8d=\'\x01\x00\x00\xb8\x00\x00\x00\x00\xe8%\xfa\xff\xffH\x8dE\xeeH\x89\xc6H\x8d=O\x01\x00\x00\xb8\x00\x00\x00\x00\xe8M\xfa\xff\xffH\x8dE\xeeH\x89\xc7\xe8\xe1\xf9\xff\xffH\x83\xf8\x05t\x07\xb8\x01\x00\x00\x00\xeb+\x8b\x05z\x17 \x00Hc\xd0H\x8dE\xeeH\x89\xc6H\x8d=\x05\xfc\xff\xff\xe8\xff\xfd\xff\xff\xb8\x00\x00\x00\x00\xe8\xf6\xfb\xff\xff\xb8\x00\x00\x00\x00H\x8bM\xf8dH3\x0c%(\x00\x00\x00t\x05\xe8\xa5\xf9\xff\xff\xc9\xc3'
replaceTo1 = b''
key1 = b'Go'
for i in range(len(replace1)):
    replaceTo1 += (replace1[i] ^ key1[i%len(key1)]).to_bytes(1,'little')

tmp = data
data = data.replace(replace1,replaceTo1)
if tmp==data:
    print("FAIL")
else :
    print("TRUE")


replace1_1 = b'UH\x89\xe5H\x83\xec dH\x8b\x04%(\x00\x00\x00H\x89E\xf81\xc0H\x8d=\xb2\x04\x00\x00\xb8\x00\x00\x00\x00\xe8\xb0\xfd\xff\xffH\x8dE\xe0H\x89\xc6H\x8d=\xda\x04\x00\x00\xb8\x00\x00\x00\x00\xe8\xd8\xfd\xff\xffH\x8dE\xe0H\x89\xc6H\x8d=\xc5\x04\x00\x00\xb8\x00\x00\x00\x00\xe8\x80\xfd\xff\xffH\x8dE\xe0H\x89\xc7\xe8T\xfd\xff\xffH\x83\xf8\rt\x07\xb8\x01\x00\x00\x00\xeb-\x8b\x15\xe5\x1a \x00H\x8dE\xe0H\x89\xc6H\x8d=/\x00\x00\x00\xb8\x00\x00\x00\x00\xe8p\x01\x00\x00\xb8\x00\x00\x00\x00\xe8\x1b\x00\x00\x00\xb8\x00\x00\x00\x00H\x8bM\xf8dH3\x0c%(\x00\x00\x00t\x05\xe8\x16\xfd\xff\xff\xc9\xc3'
replaceTo1_1 = b''
key1_1 = b'CyKor'
for i in range(len(replace1_1)):
    replaceTo1_1 += (replace1_1[i] ^ key1_1[i%len(key1_1)]).to_bytes(1,'little')

tmp = data
data = data.replace(replace1_1,replaceTo1_1)
if tmp==data:
    print("FAIL")
else :
    print("TRUE")


replace2 = b'UH\x89\xe5H\x83\xec dH\x8b\x04%(\x00\x00\x00H\x89E\xf81\xc0H\xc7E\xe0\x00\x00\x00\x00H\xc7E\xe8\x00\x00\x00\x00\xc7E\xf0\x00\x00\x00\x00H\x8d=\xe7\x03\x00\x00\xb8\x00\x00\x00\x00\xe8\xe5\xfc\xff\xffH\x8dE\xe0H\x89\xc6H\x8d=\x0f\x04\x00\x00\xb8\x00\x00\x00\x00\xe8\r\xfd\xff\xffH\x8dE\xe0H\x89\xc6H\x8d=\xfa\x03\x00\x00\xb8\x00\x00\x00\x00\xe8\xb5\xfc\xff\xffH\x8dE\xe0H\x89\xc7\xe8\x89\xfc\xff\xffH\x83\xf8\x13t\x07\xb8\x01\x00\x00\x00\xeb-\x8b\x15\x1e\x1a \x00H\x8dE\xe0H\x89\xc6H\x8d=/\x00\x00\x00\xb8\x00\x00\x00\x00\xe8\xa5\x00\x00\x00\xb8\x00\x00\x00\x00\xe8\x1b\x00\x00\x00\xb8\x00\x00\x00\x00H\x8bM\xf8dH3\x0c%(\x00\x00\x00t\x05\xe8K\xfc\xff\xff\xc9\xc3'
replaceTo2 = b'' 
key2 = b'K0R34UNIV_CTF'
for i in range(len(replace2)):
    replaceTo2 += (replace2[i] ^ key2[i%len(key2)]).to_bytes(1,'little')

tmp = data
data = data.replace(replace2,replaceTo2)
if tmp==data:
    print("FAIL")
else :
    print("TRUE")


replace3 = b'UH\x89\xe5H\x83\xec\x10dH\x8b\x04%(\x00\x00\x00H\x89E\xf81\xc0\xbe,\x05\x00\x00\xbf\xe0\x08@\x00\xe8\x8a\xfd\xff\xff\x89E\xf0\xc7E\xf4\x00\x00\x00\x00H\x8dE\xf0\xba7\x00\x00\x00H\x89\xc6H\x8d=\xb6\x19 \x00\xb8\x00\x00\x00\x00\xe83\x00\x00\x00H\x8d5\xa5\x19 \x00H\x8d=C\x03\x00\x00\xb8\x00\x00\x00\x00\xe8\xf4\xfb\xff\xff\xb8\x00\x00\x00\x00H\x8bM\xf8dH3\x0c%(\x00\x00\x00t\x05\xe8\xcb\xfb\xff\xff\xc9\xc3'
replaceTo3 = b''
key3 = b'Congr47u1a7i0n_Guys'
for i in range(len(replace3)):
    replaceTo3 += (replace3[i] ^ key3[i%len(key3)]).to_bytes(1,'little')

tmp = data
data = data.replace(replace3,replaceTo3)
if tmp==data:
    print("FAIL")
else :
    print("TRUE")


replace4 = b'You_could_feel_the_various_flavors_of_reversing,right?'
replaceTo4 = b''
key4 = b'\x6a\x85\x85\x06'
for i in range(len(replace4)):
    replaceTo4 += (replace4[i] ^ key4[i%len(key4)]).to_bytes(1,'little')

tmp = data
data = data.replace(replace4,replaceTo4)
if tmp==data:
    print("FAIL")
else :
    print("TRUE")


f1 = open("./prob_replaced","wb")
f1.write(data)